{"ast":null,"code":"var _jsxFileName = \"/Users/sergiiborodin/Desktop/Programming/GitHub/test/src/components/header/Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-scroll';\nimport { BsMoonStarsFill } from 'react-icons/bs';\nimport { BsSun } from 'react-icons/bs';\nimport { GiHamburgerMenu } from 'react-icons/gi';\nimport { RiCloseLine } from 'react-icons/ri';\nimport './header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Header = _ref => {\n  _s();\n\n  let {\n    setIsLightModeOn,\n    isLightModeOn\n  } = _ref;\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mode-interface-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mode-control-button\",\n        onClick: () => setIsLightModeOn(!isLightModeOn),\n        children: isLightModeOn ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(BsSun, {\n            size: 25\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Light-mode on\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(BsMoonStarsFill, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Dark-mode on\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: isMobileMenuOpen ? 'navbar-list-container-mobile-view' : 'navbar-list-container',\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"link\",\n            to: \"aboutMe\",\n            spy: true,\n            smooth: true,\n            duration: 500,\n            activeClass: \"active\",\n            onClick: () => {\n              setIsMobileMenuOpen(false);\n            },\n            children: \"About me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"link\",\n            to: \"skills\",\n            spy: true,\n            smooth: true,\n            duration: 500,\n            onClick: () => {\n              setIsMobileMenuOpen(false);\n            },\n            children: \"Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"link\",\n            to: \"projects\",\n            spy: true,\n            smooth: true,\n            duration: 500,\n            onClick: () => {\n              setIsMobileMenuOpen(false);\n            },\n            children: \"Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"link\",\n            to: \"experience\",\n            spy: true,\n            smooth: true,\n            duration: 500,\n            onClick: () => {\n              setIsMobileMenuOpen(false);\n            },\n            children: \"Experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"burger-menu-button\",\n        onClick: () => {\n          setIsMobileMenuOpen(!isMobileMenuOpen);\n        },\n        children: isMobileMenuOpen ? /*#__PURE__*/_jsxDEV(RiCloseLine, {\n          size: 25,\n          color: `${isLightModeOn ? 'black' : 'rgba(255, 235, 205)'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(GiHamburgerMenu, {\n          size: 25,\n          color: `${isLightModeOn ? 'black' : 'rgba(255, 235, 205)'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Header, \"QerECOS75+B7gv+k3q7FrDf39mc=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/sergiiborodin/Desktop/Programming/GitHub/test/src/components/header/Header.jsx"],"names":["React","useState","Link","BsMoonStarsFill","BsSun","GiHamburgerMenu","RiCloseLine","Header","setIsLightModeOn","isLightModeOn","isMobileMenuOpen","setIsMobileMenuOpen"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'react-scroll'\nimport { BsMoonStarsFill } from 'react-icons/bs'\nimport { BsSun } from 'react-icons/bs'\nimport { GiHamburgerMenu } from 'react-icons/gi'\nimport { RiCloseLine } from 'react-icons/ri'\n\nimport './header.css'\n\nexport const Header = ({ setIsLightModeOn, isLightModeOn }) => {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\n\n  return (\n    <header className='header-container'>\n      <div className='mode-interface-container'>\n        <button\n          className='mode-control-button'\n          onClick={() => setIsLightModeOn(!isLightModeOn)}\n        >\n          {isLightModeOn ? (\n            <div>\n              <BsSun size={25} />\n              <p>Light-mode on</p>\n            </div>\n          ) : (\n            <div>\n              <BsMoonStarsFill size={20} />\n              <p>Dark-mode on</p>\n            </div>\n          )}\n        </button>\n      </div>\n      <nav>\n        <ul\n          className={\n            isMobileMenuOpen\n              ? 'navbar-list-container-mobile-view'\n              : 'navbar-list-container'\n          }\n        >\n          <li>\n            <Link\n              className='link'\n              to='aboutMe'\n              spy={true}\n              smooth={true}\n              duration={500}\n              activeClass='active'\n              onClick={() => {\n                setIsMobileMenuOpen(false)\n              }}\n            >\n              About me\n            </Link>\n          </li>\n          <li>\n            <Link\n              className='link'\n              to='skills'\n              spy={true}\n              smooth={true}\n              duration={500}\n              onClick={() => {\n                setIsMobileMenuOpen(false)\n              }}\n            >\n              Skills\n            </Link>\n          </li>\n          <li>\n            <Link\n              className='link'\n              to='projects'\n              spy={true}\n              smooth={true}\n              duration={500}\n              onClick={() => {\n                setIsMobileMenuOpen(false)\n              }}\n            >\n              Projects\n            </Link>\n          </li>\n          <li>\n            <Link\n              className='link'\n              to='experience'\n              spy={true}\n              smooth={true}\n              duration={500}\n              onClick={() => {\n                setIsMobileMenuOpen(false)\n              }}\n            >\n              Experience\n            </Link>\n          </li>\n        </ul>\n\n        <button\n          className='burger-menu-button'\n          onClick={() => {\n            setIsMobileMenuOpen(!isMobileMenuOpen)\n          }}\n        >\n          {isMobileMenuOpen ? (\n            <RiCloseLine\n              size={25}\n              color={`${isLightModeOn ? 'black' : 'rgba(255, 235, 205)'}`}\n            />\n          ) : (\n            <GiHamburgerMenu\n              size={25}\n              color={`${isLightModeOn ? 'black' : 'rgba(255, 235, 205)'}`}\n            />\n          )}\n        </button>\n      </nav>\n    </header>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}