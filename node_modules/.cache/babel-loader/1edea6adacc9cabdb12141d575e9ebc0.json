{"ast":null,"code":"var _jsxFileName = \"/Users/sergiiborodin/Desktop/Programming/GitHub/portfolio/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { About, Projects, Footer, Header, Skills, Experience } from './components/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLightModeOn, setIsLightModeOn] = useState(true);\n  useEffect(() => {\n    // Add listener to update styles\n    window.matchMedia('(prefers-color-scheme: light)').addEventListener('change', e => setIsLightModeOn(e.matches ? true : false)); // Setup dark/light mode for the first time\n\n    setIsLightModeOn(window.matchMedia('(prefers-color-scheme: light)').matches ? true : false); // Remove listener\n\n    return () => {\n      window.matchMedia('(prefers-color-scheme: light)').removeEventListener('change', () => {});\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isLightModeOn ? 'light-mode' : 'dark-mode',\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      setIsLightModeOn: setIsLightModeOn,\n      isLightModeOn: isLightModeOn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(About, {\n      isLightModeOn: isLightModeOn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Skills, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Projects, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Experience, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+g7olf65tR6+chAKViu/gS5rY1I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sergiiborodin/Desktop/Programming/GitHub/portfolio/src/App.jsx"],"names":["React","useState","useEffect","About","Projects","Footer","Header","Skills","Experience","App","isLightModeOn","setIsLightModeOn","window","matchMedia","addEventListener","e","matches","removeEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SACEC,KADF,EAEEC,QAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,MALF,EAMEC,UANF,QAOO,oBAPP;;;AASA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,IAAD,CAAlD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAU,IAAAA,MAAM,CACHC,UADH,CACc,+BADd,EAEGC,gBAFH,CAEoB,QAFpB,EAE+BC,CAAD,IAC1BJ,gBAAgB,CAACI,CAAC,CAACC,OAAF,GAAY,IAAZ,GAAmB,KAApB,CAHpB,EAFc,CAQd;;AACAL,IAAAA,gBAAgB,CACdC,MAAM,CAACC,UAAP,CAAkB,+BAAlB,EAAmDG,OAAnD,GAA6D,IAA7D,GAAoE,KADtD,CAAhB,CATc,CAad;;AACA,WAAO,MAAM;AACXJ,MAAAA,MAAM,CACHC,UADH,CACc,+BADd,EAEGI,mBAFH,CAEuB,QAFvB,EAEiC,MAAM,CAAE,CAFzC;AAGD,KAJD;AAKD,GAnBQ,EAmBN,EAnBM,CAAT;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAEP,aAAa,GAAG,YAAH,GAAkB,WAA/C;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,gBAAgB,EAAEC,gBADpB;AAEE,MAAA,aAAa,EAAED;AAFjB;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,KAAD;AAAO,MAAA,aAAa,EAAGA;AAAvB;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAnCQD,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport {\n  About,\n  Projects,\n  Footer,\n  Header,\n  Skills,\n  Experience,\n} from './components/index'\n\nfunction App() {\n  const [isLightModeOn, setIsLightModeOn] = useState(true)\n  useEffect(() => {\n    // Add listener to update styles\n    window\n      .matchMedia('(prefers-color-scheme: light)')\n      .addEventListener('change', (e) =>\n        setIsLightModeOn(e.matches ? true : false)\n      )\n\n    // Setup dark/light mode for the first time\n    setIsLightModeOn(\n      window.matchMedia('(prefers-color-scheme: light)').matches ? true : false\n    )\n\n    // Remove listener\n    return () => {\n      window\n        .matchMedia('(prefers-color-scheme: light)')\n        .removeEventListener('change', () => {})\n    }\n  }, [])\n  return (\n    <div className={isLightModeOn ? 'light-mode' : 'dark-mode'}>\n      <Header\n        setIsLightModeOn={setIsLightModeOn}\n        isLightModeOn={isLightModeOn}\n      />\n      <About isLightModeOn={ isLightModeOn} />\n      <Skills />\n      <Projects />\n      <Experience />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}